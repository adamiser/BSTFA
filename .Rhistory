print(apply(Lamvals,2,mean))
utahDataList$Locations[nn]
utahDataList$Locations
nn=24
n=nn
f=4
QS = out$model.matrices$QS[n,]
Lamvals = matrix(0,nrow=nrow(out$alphaS),ncol=f)
for (i in 1:nrow(out$alphaS)) {
Lamvals[i,] = QS%*%matrix(out$alphaS[i,],nrow=out$n.load.bases,ncol=out$n.factors,byrow=TRUE)
}
print(nn)
print(apply(Lamvals,2,mean))
n=48
f=4
QS = out$model.matrices$QS[n,]
Lamvals = matrix(0,nrow=nrow(out$alphaS),ncol=f)
for (i in 1:nrow(out$alphaS)) {
Lamvals[i,] = QS%*%matrix(out$alphaS[i,],nrow=out$n.load.bases,ncol=out$n.factors,byrow=TRUE)
}
print(nn)
print(apply(Lamvals,2,mean))
# print(nn)
print(apply(Lamvals,2,mean))
apply(Lamvals,2,quantile,prob=c(0.025,0.975))
n=20
f=4
QS = out$model.matrices$QS[n,]
Lamvals = matrix(0,nrow=nrow(out$alphaS),ncol=f)
for (i in 1:nrow(out$alphaS)) {
Lamvals[i,] = QS%*%matrix(out$alphaS[i,],nrow=out$n.load.bases,ncol=out$n.factors,byrow=TRUE)
}
# print(nn)
print(apply(Lamvals,2,mean))
apply(Lamvals,2,quantile,prob=c(0.025,0.975))
plot.factor(out,together=TRUE)
devtools::load_all()
plot.factor(out,together=TRUE)
plot.factor(out,together=TRUE)
devtools::load_all()
plot.factor(out,together=TRUE)
plot.factor(out,together=TRUE)
devtools::load_all()
plot.factor(out,together=TRUE)
devtools::load_all()
plot.factor(out,together=TRUE)
plot.factor(out,together=TRUE)
plot.factor(out,together=TRUE)
devtools::load_all()
devtools::load_all()
getwd()
devtools::load_all()
devtools::load_all()
utahDataList$Locations
?BSTFA
library(knitr)
devtools::load_all()
# library(BSTFA)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='fourier',
load.style='fourier',
n.spatial.bases=8,
n.load.bases=6,
freq.lon=40,
freq.lat=30,
n.temp.bases=floor(nrow(ymat)/10),
freq.temp=nrow(ymat),
iters=10)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='fourier',
load.style='fourier',
n.spatial.bases=8,
n.load.bases=6,
freq.lon=40,
freq.lat=30,
n.temp.bases=floor(nrow(utahDataList$TemperatureVals)/10),
freq.temp=nrow(utahDataList$TemperatureVals),
iters=10)
floor(nrow(utahDataList$TemperatureVals)/10)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='fourier',
load.style='fourier',
n.spatial.bases=8,
n.load.bases=6,
freq.lon=40,
freq.lat=30,
#n.temp.bases=floor(nrow(utahDataList$TemperatureVals)/10),
freq.temp=nrow(utahDataList$TemperatureVals),
iters=10)
devtools::load_all()
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='fourier',
load.style='fourier',
n.spatial.bases=8,
n.load.bases=6,
freq.lon=40,
freq.lat=30,
n.temp.bases=floor(nrow(utahDataList$TemperatureVals)/10),
freq.temp=nrow(utahDataList$TemperatureVals),
iters=10)
bstfa.output$n.temp.bases
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='fourier',
load.style='fourier',
n.spatial.bases=7,
n.load.bases=6,
freq.lon=40,
freq.lat=30,
n.temp.bases=floor(nrow(utahDataList$TemperatureVals)/10),
freq.temp=nrow(utahDataList$TemperatureVals),
iters=10)
bstfa.output$n.spatial.bases
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
verbose=FALSE,
iters=10)
utahDataList$Coords[,1]
max.lon = max(utahDataList$Coords[,1])
min.lon = min(utahDataList$Coords[,1])
max.lon = max(utahDataList$Coords[,1])
min.lon = min(utahDataList$Coords[,1])
max.lat = max(utahDataList$Coords[,2])
min.lat = min(utahDataList$Coords[,2])
range.lon = max.lon-min.lon
range.lon = max.lon-min.lon
range.lat = max.lat-min.lat
range.lon
expand.grid(c(max.lon+(range.lon/6), max.lon+(range.lon/2), max.lon+5*(range.lon/6)))
range.lon
max.lon
min.lon
expand.grid(c(min.lon+(range.lon/6), min.lon+(range.lon/2), min.lon+5*(range.lon/6)))
max.lon
min.lon
expand.grid(c(min.lon+(range.lon/6), min.lon+(range.lon/2), min.lon+5*(range.lon/6)),
c(min.lat+(range.lat/6), min.lat+(range.lat/2), min.lat+5*(range.lat/6)))
knots=list()
knots=list()
max.lon = max(utahDataList$Coords[,1])
min.lon = min(utahDataList$Coords[,1])
max.lat = max(utahDataList$Coords[,2])
min.lat = min(utahDataList$Coords[,2])
range.lon = max.lon-min.lon
range.lat = max.lat-min.lat
knots[[1]] = expand.grid(c(min.lon+(range.lon/4), min.lon+3*(range.lon/4)),
c(min.lat+(range.lat/4), min.lat+3*(range.lat/4)))
knots[[2]] = expand.grid(c(min.lon+(range.lon/6),
min.lon+(range.lon/2),
min.lon+5*(range.lon/6)),
c(min.lat+(range.lat/6),
min.lat+(range.lat/2),
min.lat+5*(range.lat/6)))
knots
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
premade.knots=knots,
verbose=FALSE,
iters=10)
knots
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
premade.knots=knots,
verbose=FALSE,
iters=10)
nrow(matrix(unlist(premade.knots)))
nrow(matrix(unlist(knots),ncol=2))
devtools::load_all()
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
premade.knots=knots,
verbose=FALSE,
iters=10)
knots=list()
max.lon = max(utahDataList$Coords[,1])
min.lon = min(utahDataList$Coords[,1])
max.lat = max(utahDataList$Coords[,2])
min.lat = min(utahDataList$Coords[,2])
range.lon = max.lon-min.lon
range.lat = max.lat-min.lat
knots[[1]] = expand.grid(c(min.lon+(range.lon/4), min.lon+3*(range.lon/4)),
c(min.lat+(range.lat/4), min.lat+3*(range.lat/4)))
knots[[2]] = expand.grid(c(min.lon+(range.lon/6),
min.lon+(range.lon/2),
min.lon+5*(range.lon/6)),
c(min.lat+(range.lat/6),
min.lat+(range.lat/2),
min.lat+5*(range.lat/6)))
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
premade.knots=knots,
verbose=FALSE,
iters=10)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='tps',
load.style='tps',
iters=10)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='tps',
load.style='tps',
n.spatial.bases=8,
n.load.bases=6,
iters=10)
bstfa.output$n.spatial.bases
bstfa.output$n.load.bases
floor(sqrt(8))
sqrt(8)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='tps',
load.style='tps',
n.spatial.bases=10,
n.load.bases=6,
iters=10)
bstfa.output$n.load.bases
bstfa.output$n.spatial.bases
devtools::load_all()
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
verbose=FALSE,
iters=10)
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
spatial.style='grid',
load.style='grid',
knot.levels=2,
plot.knots=TRUE,
premade.knots=knots,
verbose=FALSE,
iters=10)
bstfa.output$knots.spatial
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
factors.fixed = c(144,89,129,78), # Specific fixed factor locations for Utah data set
iters=10,
burn=2,
thin=2,
verbose=FALSE,
save.output=FALSE)
bstfa.output$y.missing
bstfa.output$beta
dim(bstfa.output$beta()
dim(bstfa.output$beta)
dim(bstfa.output$beta)
dim(bstfa.output$xi)
dim(bstfa.output$PFmat)
dim(bstfa.output$Lambda)
1251*4
bstfa.output$time.data
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
factors.fixed = c(144,89,129,78), # Specific fixed factor locations for Utah data set
iters=10,
burn=2,
thin=2,
verbose=FALSE,
save.output=FALSE)
bstfa.output$y.missing
devtools::load_all()
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
factors.fixed = c(144,89,129,78), # Specific fixed factor locations for Utah data set
iters=10,
burn=2,
thin=2,
verbose=FALSE,
save.output=FALSE)
bstfa.output$y.missing
dim(bstfa.output$y.missing)
bstfa.output$model.matrices
bstfa.output$model.matrices$newS
bstfa.output$model.matrices$linear.Tsub
bstfa.output$model.matrices$seasonal.bs.basis
dim(bstfa.output$model.matrices$seasonal.bs.basis)
dim(bstfa.output$model.matrices$QT)
bstfa.output$n.factors
bstfa.output$Lambda[1,]
matrix(bstfa.output$Lambda[1,],nrow=1,ncol=bstfa.output$n.factors,byrow=TRUE)
matrix(bstfa.output$Lambda[1,],nrow=bstfa.output$n.locs,ncol=bstfa.output$n.factors,byrow=TRUE)
dim(matrix(bstfa.output$Lambda[1,],nrow=bstfa.output$n.locs,ncol=bstfa.output$n.factors,byrow=TRUE))
matrix(bstfa.output$Lambda[1,],nrow=bstfa.output$n.locs,ncol=bstfa.output$n.factors,byrow=TRUE)
plot.trace(bstfa.output,
parameter='beta',
param.range=c(1,2))
plot.trace(bstfa.output,
parameter='beta',
param.range=c(1,3))
plot.trace(bstfa.output,
parameter='beta',
param.range=c(2,27))
plot.trace(bstfa.output,
parameter='beta',
param.range=c(2,27),
par.mfrow = c(1,2))
plot.trace(bstfa.output,
parameter='beta',
param.range=c(2,27))
devtools::load_all()
?predictBSTFA
library(knitr)
devtools::load_all()
# library(BSTFA)
# This code runs the function correctly but isn't shown in the vignette
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
factors.fixed = c(144,89,129,78), # Specific fixed factor locations for Utah data set
iters=10,
burn=1,
thin=2,
verbose=FALSE,
save.output=FALSE)
predictBSTFA(bstfa.output,
location = 1, # represents Alpine, Utah in the data set
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
loc = 1 # Alpine, Utah in our dataset
preds = predictBSTFA(bstfa.output,
location = loc,
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
preds = predictBSTFA(bstfa.output,
location = loc,
type='mean',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
length(preds)
dim(preds)
length(preds)
loc = 1 # Alpine, Utah in our dataset
preds = predictBSTFA(bstfa.output,
location = loc,
type='mean',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
length(preds)
loc = 1 # Alpine, Utah in our dataset
preds = predictBSTFA(bstfa.output,
location = loc,
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
loc = 1 # Alpine, Utah in our dataset
preds = predictBSTFA(bstfa.output,
location = loc,
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
length(preds)
loc = 1 # Alpine, Utah in our dataset
preds = predictBSTFA(bstfa.output,
location = loc,
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
loc = data.frame('Longitude' = 111.41, 'Latitude' = 38.29) # Torrey, Utah
preds = predictBSTFA(bstfa.output,
location = loc,
type='all',
pred.int=TRUE,
ci.level=c(0.025,0.975))
dim(preds)
?plot.location
loc = 1 # Alpine, Utah in our dataset
plot.location(bstfa.output,
location=loc,
type='mean',
pred.int=TRUE,
uncertainty=TRUE,
ci.level=c(0.025,0.975),
xrange=c('1959-01-01', '1979-01-01'),
truth=TRUE)
loc = data.frame('Longitude' = 111.41, 'Latitude' = 38.29) # Torrey, Utah
plot.location(bstfa.output,
location=loc,
type='mean',
pred.int=TRUE,
uncertainty=TRUE,
ci.level=c(0.025,0.975),
xrange=c('1959-01-01', '1979-01-01'),
truth=FALSE)
plot.grid(bstfa.output,
type='mean',
parameter='slope',
yearscale=TRUE)
?plot.grid
devtools::load_all()
plot.grid(bstfa.output,
type='mean',
parameter='slope',
yearscale=TRUE)
# This code runs the function correctly but isn't shown in the vignette
bstfa.output = BSTFA(ymat=utahDataList$TemperatureVals,
dates=utahDataList$Dates,
coords=utahDataList$Coords,
factors.fixed = c(144,89,129,78), # Specific fixed factor locations for Utah data set
iters=100,
burn=1,
thin=2,
verbose=FALSE,
save.output=FALSE)
out = bstfa.output
vals = apply(out$beta,2,mean)
vals
summary(vals)
vals <- vals*365.25/(out$doy[2] - out$doy[1])
vals
summary(vals)
365.25/(out$doy[2] - out$doy[1])
plot.grid(bstfa.output,
type='mean',
parameter='slope',
yearscale=TRUE)
vals
summary(vals)
devtools::load_all()
plot.grid(bstfa.output,
type='mean',
parameter='slope',
yearscale=TRUE)
?plot.factor
plot.factor(bstfa.output,
together=FALSE,
include.legend=FALSE,
factor=1,
type='mean')
plot.map(bstfa.output,
parameter='slope',
yearscale=TRUE,
type='mean',
map=TRUE,
state=TRUE,
location='utah',
fine=100)
plot.factor(bstfa.output,
together=TRUE,
include.legend=TRUE,
type='mean')
devtools::load_all()
plot.factor(bstfa.output,
together=TRUE,
include.legend=TRUE,
type='mean')
plot.grid(bstfa.output,
type='mean',
parameter='loadings',
loadings=1)
plot.grid(bstfa.output,
type='mean',
parameter='loading',
loadings=1)
devtools::load_all()
plot.grid(bstfa.output,
type='mean',
parameter='loading',
loadings=1)
